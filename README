LEVEL II - BRING IT ON
Создать Django проект, который управляет базой студентов:

Порядок действий:

1. Регистрируемся на github.
2. Делаем форк этого проекта.
3. Выполняем проект.
4. Сообщаем об этом мне, я добавляю ваш проект в список выполненых.

Условия выполнения задания:

1. Модели:
1.1 Студент: ФИО, фотография, дата-рождения, № студ-билета, группа(FK(Группа))
1.2 Группа - Название, староста(FK(Студент))
2. Проект должен иметь initial_data.json с подготовленными данными(несколько групп и студентов), а также User-fixture (username:admin/password:admin).
3. Создать следующие views (без использования админки):
3.1 список групп (таблица - название, кол-во человек в группе, староста).
при нажатии на группу - страница со списком студентов для этой группы.
3.2 список студентов должен быть постраничный(использовать django-pagination).
должна отображаться уменьшенная фотография (использовать solr.thumbnail).
3.3 добавить авторизацию для этих страниц (username/password).
3.4 добавить создание/редактирование/удаление групп/студентов.
4. Стилизировать приложение с помощью twitter-bootstrap ( http://twitter.github.com/bootstrap/ ).
5. Сделать middleware, который на всех страницах добавляет время выполнения запроса и количество sql запросов.
6. Django.Admin - создать admin views для Групп/Студентов (студенты так же должны быть как inline для Групп).
7. Шаблоны/Контекст - сделать template-context-processor, который добавляет django.settings в контекст шаблонов.
8. Шаблоны/Теги - написать тег, который принимает любой объект и рендерит ссылку на его редактирование в админке (например {% edit_list request.user %}).
9. Сигналы - написать обработчик сигнала, который для каждой модели создает запись в базе о ее создании/редактировании/удалении.
10. Команды - написать Django комманду, которая выводит список групп и студентов в группе в консоль.
11. python manage.py test_coverage - 100%.
12. flake8 . - не выдает ошибок.